TODO:
3) A pointer on 64bit will be 64 bits, but it might point to an int32_t type.
   Need to decide how to handle these pointer types.
   A size of a pointer is always 64 bits, but the type it points too can be any type or structure.
   Need to preserve 64bit pointer width at the RTL level.
   Probably try assigning a type to the label.
4) Need to move a lot of the functions in dis64.c into the lib, such as the SSA processing etc.
   Move the functions common to dis64 and dis32. 
5) Method to detect types:
   Variables can be "read" and "written" but also touched. "touched" means pointed to but not read or written to.
   A pointer can be printed as a pointer "*local_reg0101" or a reference "&local_stack0105".
   The method used to detect the difference will be based on whether the pointer is a constant or not. Constant in the sense of at that point in the program, it always points to "&local_stack0105". If it is constant, output "&local_stack0105" instead of "*local_reg0101".
6) Method to help detect types:
   When an instruction does something to a pointer, store details regarding what it "touches" with it at that instruction log location.
10) test36.c -O2: Register r0x8 not handled correction.
    The label before and after the IF are different, but they should be the same.
11) Need to implement a dominator tree in order to fix 10).
12) Implement/FIX process blocks.
    A process block has a starting point (at a JOIN point, or function start point) , and finished with a JMP (IF for conditional or JMP otherwise)  or RET instruction.
    We will need to implement each IF with two JMPs.
    if ... goto A; else ... goto B
    This will then properly end a process block.
    Also a process block can end at the instruction just before a JOIN point. Maybe we need to add a JMP before each JOIN point.
13) Implement loop detection. How?
14) 11,12,13 need to be done before any more work on type detection can be done.
    

WIP
2) Might need to separate out types. One index into the type/struct, and another for the pointer or not.
   Also have a separate out for if it is likely to be signed or unsigned int

DONE
1) For call(), need to search back for the local_regNNNN name, from the param_regNNNN in the function params.
7) test36.c causes dis64 to segfault
8) a CMP with one input being a reg PARAM causes a problem with non registration of the register PARAM.
9) test36.c (-O2) causes   if (param_reg0040 == 0x2) IF goto label7f93;  i.e. The label is wrong.


